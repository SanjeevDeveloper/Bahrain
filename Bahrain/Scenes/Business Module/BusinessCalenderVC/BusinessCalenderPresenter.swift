//
//  BusinessCalenderPresenter.swift
//  iBeauty
//
//  Created by Nitesh Chauhan on 4/3/18.
//  Copyright (c) 2018 Kashish Verma. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol BusinessCalenderPresentationLogic
{
   func presentResponse(response: ApiResponse)
   func presentDeleteResponse(response: ApiResponse, index:Int)
}

class BusinessCalenderPresenter: BusinessCalenderPresentationLogic
{
    
    
  weak var viewController: BusinessCalenderDisplayLogic?
  
  // MARK: Do something
  
    func presentDeleteResponse(response: ApiResponse, index: Int) {
        let apiResponseDict = response.result as! NSDictionary
        printToConsole(item: apiResponseDict)
        let msg = apiResponseDict["msg"] as? String ?? ""
        viewController?.displayDeleteAppointmentResponse(msg: msg, index: index)
    }
    
    
  func presentResponse(response: ApiResponse)
  {
    var viewModelArray = [BusinessToday.ViewModel.tableCellData]()
    var ViewModelObj:BusinessToday.ViewModel
    
    if response.error != nil {
        ViewModelObj = BusinessToday.ViewModel(tableArray: viewModelArray, errorString: response.error)
    }
    else {
        let apiResponseArray = response.result as! NSArray
        for arrData in apiResponseArray {
            let responseDict = arrData as! NSDictionary
            //Client Name
            let bookingDataDict =  responseDict["bookingData"] as! NSDictionary
           
            let clientInfoDict = bookingDataDict["clientId"] as! NSDictionary
            
            // Booking Date
            let bookingDate = (bookingDataDict["bookingDate"] as! NSNumber).intValue
            printToConsole(item: bookingDate)
            
            let date = Date(milliseconds: bookingDate)
            
            printToConsole(item: date)
            

            let dateFormatter = DateFormatter()
            dateFormatter.timeZone = UaeTimeZone
            dateFormatter.dateFormat = dateFormats.format2
            let day = dateFormatter.string(from: date)
             printToConsole(item: day)
            
            let timeStr = String(day.prefix(5))
            printToConsole(item: timeStr)
            let amStr = String(day.suffix(2))
            printToConsole(item: amStr)
            
            
            dateFormatter.dateFormat = dateFormats.format4
            let forOrderDetailDay = dateFormatter.string(from: date)
            
            //therapist name
            let servicesArray = bookingDataDict["services"] as! NSArray
            
            var therapistName = String()
            var serviceDuration = String()
            var serviceName = String()
            var calulatedTotalTime = 0
            
            for serviceData in servicesArray {
                let serviceDict = serviceData as! NSDictionary
                
                therapistName = serviceDict["therapistName"] as! String
                serviceDuration = serviceDict["serviceDuration"] as! String
                 let name = serviceDict["serviceName"] as! String
                
                if serviceName.isEmptyString() {
                    serviceName.append(name)
                }
                else {
                    serviceName.append(", \(name)")
                }
                
                //Total Time
                let time = serviceDict["serviceDuration"] as! String
                
                var totalHourMin = 0
                var totalMin = 0
                var Min = 0
                if time.contains("hours") {
                    
                    printToConsole(item: time)
                    let hourString = String(time.prefix(2))
                    let accurateHourString = hourString.trimmingCharacters(in: .whitespaces)
                    let hourMin = accurateHourString.intValue()
                    totalHourMin = hourMin * 60
                    
                    if time.contains("mins") {
                        let subStr = time[time.index(time.startIndex, offsetBy: 8)...time.index(time.startIndex, offsetBy: 10)]
                        let accurateMin = subStr.trimmingCharacters(in: .whitespaces)
                        Min = accurateMin.intValue()
                    }
                    
                    
                }
                else {
                    let minString = String(time.prefix(2))
                    let accurateMinString = minString.trimmingCharacters(in: .whitespaces)
                    totalMin = accurateMinString.intValue()
                    // printToConsole(item: minString)
                }
                
                calulatedTotalTime = calulatedTotalTime + totalHourMin + Min + totalMin
                printToConsole(item: calulatedTotalTime)
            }
            
            let obj = BusinessToday.ViewModel.tableCellData(date: forOrderDetailDay, time: day, serviceName: serviceName, therapistName: therapistName, clientName: clientInfoDict["name"] as! String, appointmentTime: timeStr, am: amStr , durationTime: calulatedTotalTime, isCancelled: bookingDataDict["isCancelled"] as! Bool, totalAmount: bookingDataDict["totalAmount"] as! NSNumber, specialInstructions: "", appointmentId: bookingDataDict["_id"] as! String, categoriesArr: servicesArray, profileImage: clientInfoDict["profileImage"] as! String, paymentType: bookingDataDict["paymentType"] as! String, paymentMode: bookingDataDict["paymentStatus"] as! String, clientId: clientInfoDict["_id"] as! String, createdAt: bookingDataDict["createdAt"] as? Int64 ?? 0)
            
            viewModelArray.append(obj)
            
        }
        ViewModelObj = BusinessToday.ViewModel(tableArray: viewModelArray, errorString: response.error)
        
    }
    viewController?.displayResponse(viewModel: ViewModelObj)
    }
  }

